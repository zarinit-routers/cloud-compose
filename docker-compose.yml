services:
  cloud-connector-database:
    restart: always
    image: "postgres:latest"
    env_file:
      - ./env/connector-database.env
    networks:
      - cloud-connector-network
    volumes:
      - cloud-connector-database-data:/var/lib/postgresql/data/

  rabbit-mq:
    image: "rabbitmq:latest"
    env_file:
      - ./env/rabbitmq.env
    ports:
      - 5672:5672
    networks:
      - rabbitmq-network
    volumes:
      - /tmp/rabbitmq/:/var/lib/rabbitmq

  cloud-connector:
    restart: unless-stopped
    depends_on:
      - cloud-connector-database
      - rabbit-mq
    build: https://github.com/zarinit-routers/cloud-connector.git
    ports:
      - 8070:8070
      - 8071:8071
    networks:
      - all-network
      - cloud-connector-network
      - rabbitmq-network
    env_file:
      - ./env/jwt.env
      - ./env/rabbitmq-connect.env
    environment:
      PORT: 8070
      DATABASE_CONNECTION_STRING: "host='cloud-connector-database' user='connector' password='CoolPassword123' port='5432' dbname='connector-db' sslmode=disable"
      DATABASE_AUTO_MIGRATE: true

  cloud-server:
    restart: always
    ports:
      - 9090:9090
    depends_on:
      - rabbit-mq
    build: https://github.com/zarinit-routers/cloud-server.git
    env_file:
      - ./env/rabbitmq-connect.env
    networks:
      - rabbitmq-network
      - all-network

  cloud-auth:
    container_name: cloud-auth
    build: https://github.com/zarinit-routers/cloud-auth.git
    ports:
      - "5001:5001"
    restart: always
    env_file:
      - ./env/jwt.env
    environment:
      DB_CONNECTION_STRING: "host=cloud-auth-database user=auth-db-user password=CoolPassword123 dbname=auth-db port=5432 sslmode=disable TimeZone=UTC client_encoding=UTF8"
      ROOT_USER_EMAIL: root@admin.com
      ROOT_USER_PASSWORD: 1
    depends_on:
      - cloud-auth-database
    networks:
      - cloud-auth-network
      - all-network

  cloud-auth-database:
    image: postgres:15
    environment:
      POSTGRES_DB: auth-db
      POSTGRES_USER: auth-db-user
      POSTGRES_PASSWORD: CoolPassword123
    volumes:
      - cloud-auth-database-data:/var/lib/postgresql/data
    networks:
      - cloud-auth-network
  
  cloud-organizations:
    container_name: cloud-organizations
    build: https://github.com/zarinit-routers/cloud-organizations.git
    ports:
      - "8060:8060"
    restart: always
    env_file:
      - ./env/jwt.env
    networks:
      - all-network

  haproxy:
    image: haproxy:lts-alpine3.22
    restart: always
    ports:
      - 80:80
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    networks:
      - all-network
    depends_on:
      - cloud-auth
      - cloud-organizations
      - cloud-server
      - cloud-connector

networks:
  all-network:
    driver: bridge
  cloud-connector-network:
    driver: bridge
  cloud-auth-network:
    driver: bridge
  rabbitmq-network:
    driver: bridge

volumes:
  cloud-auth-database-data:
  cloud-connector-database-data:
